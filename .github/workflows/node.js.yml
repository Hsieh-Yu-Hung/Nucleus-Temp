# This workflow will do a clean install of node dependencies, cache/restore them, build the source code and run tests for node v14
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Nucleus CI

on:
  push:
    branches:
      - "*"
      - "!main"

jobs:
  ci:
    strategy:
      matrix:
        os: [macos-13, windows-2022]
        include:
          - os: macos-13
          - os: windows-2022
    runs-on: ${{ matrix.os }}
    steps:
      - name: Set up GitHub Actions
        uses: actions/checkout@v3
        with:
          persist-credentials: false
      - name: Set up Node.js v18
        uses: actions/setup-node@v3
        with:
          node-version: "18"
          cache: "npm"
      - name: Get npm cache directory
        id: npm-cache
        run: |
          echo "DIR=$(npm config get cache)" >> $GITHUB_OUTPUT
      - uses: actions/cache@v3
        with:
          path: ${{ steps.npm-cache.outputs.DIR }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Install packages by npm
        run: |
          npm cache clean --force
          npm install
          npm install cross-env --save-dev
      - name: Test core
        run: npm test
      - name: Create python env
        uses: actions/setup-python@v4
        with:
          python-version: "3.8"
      - name: Install pytnon dependencies
        run: |
          pip install -r ./smaRf_requirements.txt
      - name: Build SMA model prediction
        run: |
          pyinstaller --hidden-import=sklearn.ensemble._forest core/sma_model/predict.py
      - name: Test SMA prediction on windows-2022
        if: matrix.os == 'windows-2022'
        run: |
          $TEST_OUTPUT = dist/predict/predict core/sma_model/smn1_230325_rf.joblib "[ [ 0.676, 0.412, -0.176, -0.166, 0.331, 0.269 ] ]"
          if ($TEST_OUTPUT.Contains("2")) {
            Write-Host "Test passed: $TEST_OUTPUT"
          } else {
            Write-Host "Test failed: $TEST_OUTPUT"
            exit 1
          }
      - name: Test SMA prediction on macos-13
        if: matrix.os == 'macos-13'
        run: |
          TEST_OUTPUT=$(dist/predict/predict core/sma_model/smn1_230325_rf.joblib "[ [ 0.676, 0.412, -0.176, -0.166, 0.331, 0.269 ] ]")
          if [[ "$TEST_OUTPUT" == *"2"* ]]; then
            echo "Test passed: $TEST_OUTPUT"
          else
            echo "Test failed: $TEST_OUTPUT"
            exit 1
          fi
      - name: Prepare distributed folder for SMA models
        run: |
          mkdir -p dist/models
          cp ./core/sma_model/*.joblib dist/models/.
      - name: Archive SMA prediction runner
        if: ${{ startsWith(github.ref_name, 'release') ||  startsWith(github.ref_name, 'test') }}
        uses: actions/upload-artifact@v4
        with:
          name: ACCUiN.Nucleus.SMA.Prediction-${{ matrix.os }}
          path: |
            dist/
